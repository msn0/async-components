"use strict";(function(t){var e="data-component";var n="data-detail";var r="data-event";var o={attributes:true,childList:true,characterData:false,subtree:true,attributeFilter:[e]};function u(t){return t.text()}function a(t){var e=t.node.getAttribute(n);t.eventName=t.node.getAttribute(r);try{t.detail=JSON.parse(e)}catch(o){t.detail=e}return Promise.resolve(t)}function i(t){return function(e){return a({node:t,text:e})}}function c(t){t.node.innerHTML=t.text;return Promise.resolve(t)}function d(e){var n=new CustomEvent(e.eventName,{detail:{node:e.node,data:e.detail}});console.log(e);t.dispatchEvent(n);return Promise.resolve(e.node)}function f(){console.error("Error occured")}function s(t){var n=t.querySelectorAll("["+e+"]");b(n).forEach(h)}function l(t){var n=t.getAttribute(e);fetch(n).then(u).then(i(t)).then(c).then(d).then(s)["catch"](f)}function v(t){return t.nodeType===1&&t.getAttribute(e)}function h(t){return setTimeout(l(t),0)}function b(t){return[].slice.call(t)}function m(t){b(t).filter(v).forEach(h)}var E=new MutationObserver(function(t){t.forEach(function(t){m(t.addedNodes)})});E.observe(t.body,o)})(document);